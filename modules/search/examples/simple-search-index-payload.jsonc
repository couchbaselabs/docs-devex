// tag::json-snippet[]
{
    "name": "travel-sample._default.gfx",
    "type": "fulltext-index",
    "uuid": "28b999e9e17dd4a7",
    "sourceType": "gocbcore",
    "sourceName": "travel-sample",
    "sourceUUID": "d3604c0ec4792b4c6c5f7f2cc8207b80",
    "sourceParams": {},
    // tag::plan-params[]
    "planParams": {
        "maxPartitionsPerPIndex": 1024,
        "indexPartitions": 1,
        "numReplicas": 0
    },
    // end::plan-params[]
    "params": {
        // end::json-snippet[]
        // tag::doc_config[]
        "doc_config": {
            "docid_prefix_delim": "",
            "docid_regexp": "",
            "mode": "scope.collection.type_field",
            "type_field": "type"
        },
        // end::doc_config[]
        // tag::mapping[]
        "mapping": {
            "analysis": {
                // tag::analyzers[]
                "analyzers": {
                    // tag::analyzer_name[]
                    "My_Analyzer": {
                        "token_filters": [
                            "apostrophe",
                            "My_Token_Filter"
                        ],
                        "char_filters": [
                            "asciifolding",
                            "html",
                            "My_Char_Filter"
                        ],
                        "type": "custom",
                        "tokenizer": "My_Tokenizer_Excep"
                    }
                    // end::analyzer_name[]
                },
                // end::analyzers[]
                // tag::char_filters[]
                "char_filters": {
                    // tag::char_filter_name[]
                    "My_Char_Filter": {
                        "regexp": "[']",
                        "replace": " ",
                        "type": "regexp"
                    }
                    // end::char_filter_name[]
                },
                // end::char_filters[]
                // tag::tokenizers[]
                "tokenizers": {
                    // tag::tokenizer_name[]
                    "My_Tokenizer_Excep": {
                        "exceptions": [
                            "[*]"
                        ],
                        "tokenizer": "unicode",
                        "type": "exception"
                    },
                    // end::tokenizer_name[]
                    "My_Tokenizer_RegExp": {
                        "regexp": "[*]",
                        "type": "regexp"
                    }
                },
                // end::tokenizers[]
                // tag::token_filters[]
                "token_filters": {
                    // end::mapping[]
                    // tag::token_filter_name[]
                    "My_Token_Filter": {
                        "min": 3,
                        "max": 255,
                        "type": "length"
                    }
                    // end::token_filter_name[]
                },
                // end::token_filters[]
                // tag::token_maps[]
                "token_maps": {
                    // tag::wordlist_name[]
                    "My_Wordlist": {
                        "type": "custom",
                        "tokens": [
                            "the",
                            "is",
                            "and"
                        ]
                    }
                    // end::wordlist_name[]
                },
                // end::token_maps[]
                // tag::date_time_parsers[]
                "date_time_parsers": {
                    // tag::date_time_parser_name[]
                    "My_Date_Time_Parser": {
                        "type": "flexiblego",
                        "layouts": [
                            "RFC850"
                        ]
                    }
                    // end::date_time_parser_name[]
                }
                // end::date_time_parsers[]
            },
            "default_analyzer": "standard",
            "default_datetime_parser": "dateTimeOptional",
            "default_field": "_all",
            // tag::default_mapping[]
            "default_mapping": {
                "dynamic": false,
                "enabled": false
            },
            // end::default_mapping[]
            "default_type": "_default",
            "docvalues_dynamic": true,
            "index_dynamic": true,
            "store_dynamic": true,
            "type_field": "_type",
            // tag::types[]
            "types": {
                // tag::scope_collection[]
                "inventory.hotel": {
                    "dynamic": false,
                    "enabled": true,
                    "properties": {
                        // tag::field_name[]
                        "reviews": {
                            "dynamic": false,
                            "enabled": true,
                            "properties": {
                                "content": {
                                    "enabled": true,
                                    "dynamic": false,
                                    // tag::fields[]
                                    "fields": [
                                        {
                                            "docvalues": true,
                                            "include_in_all": true,
                                            "include_term_vectors": true,
                                            "index": true,
                                            "name": "content",
                                            "store": true,
                                            "type": "text",
                                            "analyzer": "My_Analyzer"
                                        }
                                    ]
                                    // end::fields[]
                                }
                            }
                        },
                        // end::field_name[]
                        "city": {
                            "enabled": true,
                            "dynamic": false,
                            "fields": [
                                {
                                    "docvalues": true,
                                    "include_in_all": true,
                                    "include_term_vectors": true,
                                    "index": true,
                                    "name": "city",
                                    "store": true,
                                    "type": "text"
                                }
                            ]
                        }
                    }
                }
                // end::scope_collection[]
            }
            // end::types[]
        },
        "store": {
            "indexType": "scorch",
            "segmentVersion": 15
        }
    }
}
