@startuml

allow_mixing
skinparam actorStyle Awesome


actor "US\nUser" as USUser
actor "UK\nUser" as UKUser


database "Banking\nDatabase" as bankingDatabase {

    node "UK Bank Scope" as UKBankScope {
    
      frame "bank-library" as UKLibrary {
        file "getInterestInSterling(termInYears, rate)" as interestInSterling
      } 
    }
    
    node "US Bank Scope" as USBankScope {
    
    frame "bank-library" as USLibrary {
      file "getInterestInDollars(termInYears, rate)" as interestInDollars
      }
    }
    
}


component "GetInterest(...)" <<{sqlpp} User-Defined Function>> as UKReferenceFunction
component "GetInterest(...)" <<{sqlpp} User-Defined Function>> as USReferenceFunction


UKReferenceFunction --> interestInSterling : references
UKUser --> UKReferenceFunction

USReferenceFunction --> interestInDollars : references
USUser --> USReferenceFunction

note left of UKUser #Ivory
  **UK** User is logged on with
  the BankingDatabase.**UKBank**
  context scope
end note

note right of USUser #Ivory
  **US** User is logged on with
  the BankingDatabase.**USBank**
  context scope
end note

note as referenceFunctionNote #Ivory
  Two N1QL User-Defined Functions with the same name,
  but pointing at different JavaScript functions 
  in different libraries in different scopes.
end note

referenceFunctionNote .. UKReferenceFunction
referenceFunctionNote .. USReferenceFunction

@enduml
